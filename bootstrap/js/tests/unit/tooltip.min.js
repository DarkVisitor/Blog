$(function(){QUnit.module("tooltip plugin");QUnit.test("should be defined on jquery object",function(a){a.expect(1);a.ok($(document.body).tooltip,"tooltip method is defined")});QUnit.module("tooltip",{beforeEach:function(){$.fn.bootstrapTooltip=$.fn.tooltip.noConflict()},afterEach:function(){$.fn.tooltip=$.fn.bootstrapTooltip;delete $.fn.bootstrapTooltip;$(".tooltip").remove()}});QUnit.test("should provide no conflict",function(a){a.expect(1);a.strictEqual($.fn.tooltip,undefined,"tooltip was set back to undefined (org value)")});QUnit.test("should throw explicit error on undefined method",function(a){a.expect(1);var b=$("<div/>");b.bootstrapTooltip();try{b.bootstrapTooltip("noMethod")}catch(c){a.strictEqual(c.message,'No method named "noMethod"')}});QUnit.test("should return jquery collection containing the element",function(a){a.expect(2);var c=$("<div/>");var b=c.bootstrapTooltip();a.ok(b instanceof $,"returns jquery collection");a.strictEqual(b[0],c[0],"collection contains element")});QUnit.test("should expose default settings",function(a){a.expect(1);a.ok($.fn.bootstrapTooltip.Constructor.Default,"defaults is defined")});QUnit.test("should empty title attribute",function(b){b.expect(1);var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();b.strictEqual(a.attr("title"),"","title attribute was emptied")});QUnit.test("should add data attribute for referencing original title",function(b){b.expect(1);var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();b.strictEqual(a.attr("data-original-title"),"Another tooltip","original title preserved in data attribute")});QUnit.test("should add aria-describedby to the trigger on show",function(b){b.expect(3);var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture").bootstrapTooltip("show");var c=$(".tooltip").attr("id");b.strictEqual($("#"+c).length,1,"has a unique id");b.strictEqual($(".tooltip").attr("aria-describedby"),a.attr("id"),"tooltip id and aria-describedby on trigger match");b.ok(a[0].hasAttribute("aria-describedby"),"trigger has aria-describedby")});QUnit.test("should remove aria-describedby from trigger on hide",function(b){b.expect(2);var a=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture");a.bootstrapTooltip("show");b.ok(a[0].hasAttribute("aria-describedby"),"trigger has aria-describedby");a.bootstrapTooltip("hide");b.ok(!a[0].hasAttribute("aria-describedby"),"trigger does not have aria-describedby")});QUnit.test("should assign a unique id tooltip element",function(a){a.expect(2);$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip("show");var b=$(".tooltip").attr("id");a.strictEqual($("#"+b).length,1,"tooltip has unique id");a.strictEqual(b.indexOf("tooltip"),0,"tooltip id has prefix")});QUnit.test("should place tooltips relative to placement option",function(a){a.expect(2);var b=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({placement:"bottom"});b.bootstrapTooltip("show");a.ok($(".tooltip").is(".fade.bs-tooltip-bottom.show"),"has correct classes applied");b.bootstrapTooltip("hide");a.strictEqual(b.data("bs.tooltip").tip.parentNode,null,"tooltip removed")});QUnit.test("should allow html entities",function(a){a.expect(2);var b=$('<a href="#" rel="tooltip" title="&lt;b&gt;@fat&lt;/b&gt;"/>').appendTo("#qunit-fixture").bootstrapTooltip({html:true});b.bootstrapTooltip("show");a.notEqual($(".tooltip b").length,0,"b tag was inserted");b.bootstrapTooltip("hide");a.strictEqual(b.data("bs.tooltip").tip.parentNode,null,"tooltip removed")});QUnit.test("should allow DOMElement title (html: false)",function(a){a.expect(3);var c=document.createTextNode("<3 writing tests");var b=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:c});b.bootstrapTooltip("show");a.notEqual($(".tooltip").length,0,"tooltip inserted");a.strictEqual($(".tooltip").text(),"<3 writing tests","title inserted");a.ok(!$.contains($(".tooltip").get(0),c),"title node copied, not moved")});QUnit.test("should allow DOMElement title (html: true)",function(a){a.expect(3);var c=document.createTextNode("<3 writing tests");var b=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({html:true,title:c});b.bootstrapTooltip("show");a.notEqual($(".tooltip").length,0,"tooltip inserted");a.strictEqual($(".tooltip").text(),"<3 writing tests","title inserted");a.ok($.contains($(".tooltip").get(0),c),"title node moved, not copied")});QUnit.test("should respect custom classes",function(a){a.expect(2);var b=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({template:'<div class="tooltip some-class"><div class="tooltip-arrow"/><div class="tooltip-inner"/></div>'});b.bootstrapTooltip("show");a.ok($(".tooltip").hasClass("some-class"),"custom class is present");b.bootstrapTooltip("hide");a.strictEqual(b.data("bs.tooltip").tip.parentNode,null,"tooltip removed")});QUnit.test("should fire show event",function(b){b.expect(1);var a=b.async();$('<div title="tooltip title"/>').on("show.bs.tooltip",function(){b.ok(true,"show event fired");a()}).bootstrapTooltip("show")});QUnit.test("should throw an error when show is called on hidden elements",function(b){b.expect(1);var a=b.async();try{$('<div title="tooltip title" style="display: none"/>').bootstrapTooltip("show")}catch(c){b.strictEqual(c.message,"Please use show on visible elements");a()}});QUnit.test("should fire inserted event",function(b){b.expect(2);var a=b.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("inserted.bs.tooltip",function(){b.notEqual($(".tooltip").length,0,"tooltip was inserted");b.ok(true,"inserted event fired");a()}).bootstrapTooltip("show")});QUnit.test("should fire shown event",function(b){b.expect(1);var a=b.async();$('<div title="tooltip title"></div>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){b.ok(true,"shown was called");a()}).bootstrapTooltip("show")});QUnit.test("should not fire shown event when show was prevented",function(b){b.expect(1);var a=b.async();$('<div title="tooltip title"/>').on("show.bs.tooltip",function(c){c.preventDefault();b.ok(true,"show event fired");a()}).on("shown.bs.tooltip",function(){b.ok(false,"shown event fired")}).bootstrapTooltip("show")});QUnit.test("should fire hide event",function(b){b.expect(1);var a=b.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(){b.ok(true,"hide event fired");a()}).bootstrapTooltip("show")});QUnit.test("should fire hidden event",function(b){b.expect(1);var a=b.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){b.ok(true,"hidden event fired");a()}).bootstrapTooltip("show")});QUnit.test("should not fire hidden event when hide was prevented",function(b){b.expect(1);var a=b.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(c){c.preventDefault();b.ok(true,"hide event fired");a()}).on("hidden.bs.tooltip",function(){b.ok(false,"hidden event fired")}).bootstrapTooltip("show")});QUnit.test("should destroy tooltip",function(a){a.expect(7);var b=$("<div/>").bootstrapTooltip().on("click.foo",function(){});a.ok(b.data("bs.tooltip"),"tooltip has data");a.ok($._data(b[0],"events").mouseover&&$._data(b[0],"events").mouseout,"tooltip has hover events");a.strictEqual($._data(b[0],"events").click[0].namespace,"foo","tooltip has extra click.foo event");b.bootstrapTooltip("show");b.bootstrapTooltip("dispose");a.ok(!b.hasClass("show"),"tooltip is hidden");a.ok(!$._data(b[0],"bs.tooltip"),"tooltip does not have data");a.strictEqual($._data(b[0],"events").click[0].namespace,"foo","tooltip still has click.foo");a.ok(!$._data(b[0],"events").mouseover&&!$._data(b[0],"events").mouseout,"tooltip does not have hover events")});QUnit.test("should show tooltip when toggle is called",function(a){a.expect(1);$('<a href="#" rel="tooltip" title="tooltip on toggle"/>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("toggle");a.ok($(".tooltip").is(".fade.show"),"tooltip is faded active")});QUnit.test("should hide previously shown tooltip when toggle is called on tooltip",function(a){a.expect(1);$('<a href="#" rel="tooltip" title="tooltip on toggle">@ResentedHook</a>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("show");$(".tooltip").bootstrapTooltip("toggle");a.ok($(".tooltip").not(".fade.show"),"tooltip was faded out")});QUnit.test("should place tooltips inside body when container is body",function(a){a.expect(3);var b=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({container:"body"}).bootstrapTooltip("show");a.notEqual($("body > .tooltip").length,0,"tooltip is direct descendant of body");a.strictEqual($("#qunit-fixture > .tooltip").length,0,"tooltip is not in parent");b.bootstrapTooltip("hide");a.strictEqual($("body > .tooltip").length,0,"tooltip was removed from dom")});QUnit.test("should add position class before positioning so that position-specific styles are taken into account",function(b){b.expect(2);var a=b.async();var c="<style>.bs-tooltip-right { white-space: nowrap; }.bs-tooltip-right .tooltip-inner { max-width: none; }</style>";var e=$(c).appendTo("head");var d=$("<div/>").appendTo("#qunit-fixture");$('<a href="#" rel="tooltip" title="very very very very very very very very long tooltip in one line"/>').appendTo(d).bootstrapTooltip({placement:"right",trigger:"manual"}).on("inserted.bs.tooltip",function(){var f=$($(this).data("bs.tooltip").tip);b.ok(f.hasClass("bs-tooltip-right"));b.ok(f.attr("style")===undefined);e.remove();a()}).bootstrapTooltip("show")});QUnit.test("should use title attribute for tooltip text",function(a){a.expect(2);var b=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip();b.bootstrapTooltip("show");a.strictEqual($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title from title attribute is set");b.bootstrapTooltip("hide");a.strictEqual($(".tooltip").length,0,"tooltip removed from dom")});QUnit.test("should prefer title attribute over title option",function(a){a.expect(2);var b=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});b.bootstrapTooltip("show");a.strictEqual($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title is set from title attribute while preferred over title option");b.bootstrapTooltip("hide");a.strictEqual($(".tooltip").length,0,"tooltip removed from dom")});QUnit.test("should use title option",function(a){a.expect(2);var b=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});b.bootstrapTooltip("show");a.strictEqual($(".tooltip").children(".tooltip-inner").text(),"This is a tooltip with some content","title from title option is set");b.bootstrapTooltip("hide");a.strictEqual($(".tooltip").length,0,"tooltip removed from dom")});QUnit.test("should not error when trying to show an top-placed tooltip that has been removed from the dom",function(a){a.expect(1);var d=true;var b=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").one("show.bs.tooltip",function(){$(this).remove()}).bootstrapTooltip({placement:"top"});try{b.bootstrapTooltip("show")}catch(c){d=false;console.log(c)}a.ok(d,".tooltip('show') should not throw an error if element no longer is in dom")});QUnit.test("should place tooltip on top of element",function(b){b.expect(1);var a=b.async();var c='<div id="test"><p style="margin-top: 200px"><a href="#" title="very very very very very very very long tooltip">Hover me</a></p></div>';var d=$(c).css({position:"absolute",bottom:0,left:0,textAlign:"right",width:300,height:300}).appendTo("#qunit-fixture");d.find("a").css("margin-top",200).bootstrapTooltip({placement:"top",animate:false}).on("shown.bs.tooltip",function(){var e=$($(this).data("bs.tooltip").tip);if(/iPhone|iPad|iPod/.test(navigator.userAgent)){b.ok(Math.round(e.offset().top+e.outerHeight())<=Math.round($(this).offset().top))}else{b.ok(Math.round(e.offset().top+e.outerHeight())>=Math.round($(this).offset().top))}a()}).bootstrapTooltip("show")});QUnit.test("should show tooltip if leave event hasn't occurred before delay expires",function(b){b.expect(2);var a=b.async();var c=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){b.ok(!$(".tooltip").is(".fade.show"),"100ms: tooltip is not faded active")},100);setTimeout(function(){b.ok($(".tooltip").is(".fade.show"),"200ms: tooltip is faded active");a()},200);c.trigger("mouseenter")});QUnit.test("should not show tooltip if leave event occurs before delay expires",function(b){b.expect(2);var a=b.async();var c=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){b.ok(!$(".tooltip").is(".fade.show"),"100ms: tooltip not faded active");c.trigger("mouseout")},100);setTimeout(function(){b.ok(!$(".tooltip").is(".fade.show"),"200ms: tooltip not faded active");a()},200);c.trigger("mouseenter")});QUnit.test("should not hide tooltip if leave event occurs and enter event occurs within the hide delay",function(b){b.expect(3);var a=b.async();var c=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){b.ok($(".tooltip").is(".fade.show"),"1ms: tooltip faded active");c.trigger("mouseout");setTimeout(function(){b.ok($(".tooltip").is(".fade.show"),"100ms: tooltip still faded active");c.trigger("mouseenter")},100);setTimeout(function(){b.ok($(".tooltip").is(".fade.show"),"200ms: tooltip still faded active");a()},200)},0);c.trigger("mouseenter")});QUnit.test("should not show tooltip if leave event occurs before delay expires",function(b){b.expect(2);var a=b.async();var c=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){b.ok(!$(".tooltip").is(".fade.show"),"100ms: tooltip not faded active");c.trigger("mouseout")},100);setTimeout(function(){b.ok(!$(".tooltip").is(".fade.show"),"200ms: tooltip not faded active");a()},200);c.trigger("mouseenter")});QUnit.test("should not show tooltip if leave event occurs before delay expires, even if hide delay is 0",function(b){b.expect(2);var a=b.async();var c=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:150,hide:0}});setTimeout(function(){b.ok(!$(".tooltip").is(".fade.show"),"100ms: tooltip not faded active");c.trigger("mouseout")},100);setTimeout(function(){b.ok(!$(".tooltip").is(".fade.show"),"250ms: tooltip not faded active");a()},250);c.trigger("mouseenter")});QUnit.test("should wait 200ms before hiding the tooltip",function(b){b.expect(3);var a=b.async();var c=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){b.ok($(c.data("bs.tooltip").tip).is(".fade.show"),"1ms: tooltip faded active");c.trigger("mouseout");setTimeout(function(){b.ok($(c.data("bs.tooltip").tip).is(".fade.show"),"100ms: tooltip still faded active")},100);setTimeout(function(){b.ok(!$(c.data("bs.tooltip").tip).is(".show"),"200ms: tooltip removed");a()},200)},0);c.trigger("mouseenter")});QUnit.test("should not reload the tooltip on subsequent mouseenter events",function(a){a.expect(1);var c=function(){var e=Util.getUID("tooltip");return'<p id="tt-content">'+e+"</p><p>"+e+"</p><p>"+e+"</p>"};var b=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");b.bootstrapTooltip({html:true,animation:false,trigger:"hover",delay:{show:0,hide:500},container:b,title:c});$("#tt-outer").trigger("mouseenter");var d=$("#tt-content").text();$("#tt-content").trigger("mouseenter");a.strictEqual(d,$("#tt-content").text())});QUnit.test("should not reload the tooltip if the mouse leaves and re-enters before hiding",function(a){a.expect(4);var c=function(){var f=Util.getUID("tooltip");return'<p id="tt-content">'+f+"</p><p>"+f+"</p><p>"+f+"</p>"};var b=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");b.bootstrapTooltip({html:true,animation:false,trigger:"hover",delay:{show:0,hide:500},title:c});var d=b.data("bs.tooltip");$("#tt-outer").trigger("mouseenter");var e=$("#tt-content").text();$("#tt-outer").trigger("mouseleave");a.strictEqual(e,$("#tt-content").text());a.ok(d._hoverState==="out",'the tooltip hoverState should be set to "out"');$("#tt-outer").trigger("mouseenter");a.ok(d._hoverState==="show",'the tooltip hoverState should be set to "show"');a.strictEqual(e,$("#tt-content").text())});QUnit.test("should do nothing when an attempt is made to hide an uninitialized tooltip",function(a){a.expect(1);var b=$('<span data-toggle="tooltip" title="some tip">some text</span>').appendTo("#qunit-fixture").on("hidden.bs.tooltip shown.bs.tooltip",function(){a.ok(false,"should not fire any tooltip events")}).bootstrapTooltip("hide");a.strictEqual(b.data("bs.tooltip"),undefined,"should not initialize the tooltip")});QUnit.test("should not remove tooltip if multiple triggers are set and one is still active",function(b){b.expect(41);var d=$("<button>Trigger</button>").appendTo("#qunit-fixture").bootstrapTooltip({trigger:"click hover focus",animation:false});var f=d.data("bs.tooltip");var c=$(f.getTipElement());function a(){return c.hasClass("show")||f._hoverState==="show"}var e=[["mouseenter","mouseleave"],["focusin","focusout"],["click","click"],["mouseenter","focusin","focusout","mouseleave"],["mouseenter","focusin","mouseleave","focusout"],["focusin","mouseenter","mouseleave","focusout"],["focusin","mouseenter","focusout","mouseleave"],["click","focusin","mouseenter","focusout","mouseleave","click"],["mouseenter","click","focusin","focusout","mouseleave","click"],["mouseenter","focusin","click","click","mouseleave","focusout"]];b.ok(!a());$.each(e,function(h,k){for(var j=0,g=k.length;j<g;j++){d.trigger(k[j]);b.equal(j<g-1,a())}})});QUnit.test("should show on first trigger after hide",function(b){b.expect(3);var d=$('<a href="#" rel="tooltip" title="Test tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"click hover focus",animation:false});var e=d.data("bs.tooltip");var c=$(e.getTipElement());function a(){return c.hasClass("show")||e._hoverState==="show"}d.trigger("click");b.ok(a(),"tooltip is faded in");d.bootstrapTooltip("hide");b.ok(!a(),"tooltip was faded out");d.trigger("click");b.ok(a(),"tooltip is faded in again")});QUnit.test("should hide tooltip when their containing modal is closed",function(b){b.expect(1);var a=b.async();var c='<div id="modal-test" class="modal"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-body"><a id="tooltipTest" href="#" data-toggle="tooltip" title="Some tooltip text!">Tooltip</a></div></div></div></div>';$(c).appendTo("#qunit-fixture");$("#tooltipTest").bootstrapTooltip({trigger:"manuel"}).on("shown.bs.tooltip",function(){$("#modal-test").modal("hide")}).on("hide.bs.tooltip",function(){b.ok(true,"tooltip hide");a()});$("#modal-test").on("shown.bs.modal",function(){$("#tooltipTest").bootstrapTooltip("show")}).modal("show")});QUnit.test("should reset tip classes when hidden event triggered",function(b){b.expect(2);var a=b.async();var c=$('<a href="#" rel="tooltip" title="Test tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip("show").on("hidden.bs.tooltip",function(){var e=c.data("bs.tooltip");var d=$(e.getTipElement());b.ok(d.hasClass("tooltip"));b.ok(d.hasClass("fade"));a()});c.bootstrapTooltip("hide")});QUnit.test("should convert number in title to string",function(b){b.expect(1);var a=b.async();var c=$('<a href="#" rel="tooltip" title="7"/>').appendTo("#qunit-fixture").bootstrapTooltip("show").on("shown.bs.tooltip",function(){var e=c.data("bs.tooltip");var d=$(e.getTipElement());b.strictEqual(d.children().text(),"7");a()});c.bootstrapTooltip("show")})});
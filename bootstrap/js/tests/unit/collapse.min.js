$(function(){QUnit.module("collapse plugin");QUnit.test("should be defined on jquery object",function(a){a.expect(1);a.ok($(document.body).collapse,"collapse method is defined")});QUnit.module("collapse",{beforeEach:function(){$.fn.bootstrapCollapse=$.fn.collapse.noConflict()},afterEach:function(){$.fn.collapse=$.fn.bootstrapCollapse;delete $.fn.bootstrapCollapse}});QUnit.test("should provide no conflict",function(a){a.expect(1);a.strictEqual($.fn.collapse,undefined,"collapse was set back to undefined (org value)")});QUnit.test("should throw explicit error on undefined method",function(a){a.expect(1);var b=$("<div/>");b.bootstrapCollapse();try{b.bootstrapCollapse("noMethod")}catch(c){a.strictEqual(c.message,'No method named "noMethod"')}});QUnit.test("should return jquery collection containing the element",function(a){a.expect(2);var b=$("<div/>");var c=b.bootstrapCollapse();a.ok(c instanceof $,"returns jquery collection");a.strictEqual(c[0],b[0],"collection contains element")});QUnit.test("should show a collapsed element",function(a){a.expect(2);var b=$('<div class="collapse"/>').bootstrapCollapse("show");a.ok(b.hasClass("show"),'has class "show"');a.ok(!/height/i.test(b.attr("style")),"has height reset")});QUnit.test("should show multiple collapsed elements",function(c){c.expect(4);var b=c.async();var a=$('<a role="button" data-toggle="collapse" class="collapsed" href=".multi"/>').appendTo("#qunit-fixture");var d=$('<div class="collapse multi"/>').appendTo("#qunit-fixture");var e=$('<div class="collapse multi"/>').appendTo("#qunit-fixture");d.one("shown.bs.collapse",function(){c.ok(d.hasClass("show"),'has class "show"');c.ok(!/height/i.test(d.attr("style")),"has height reset")});e.one("shown.bs.collapse",function(){c.ok(e.hasClass("show"),'has class "show"');c.ok(!/height/i.test(e.attr("style")),"has height reset");b()});a.trigger("click")});QUnit.test("should collapse only the first collapse",function(b){b.expect(2);var a=b.async();var c=['<div class="panel-group" id="accordion1">','<div class="panel">','<div id="collapse1" class="collapse"/>',"</div>","</div>",'<div class="panel-group" id="accordion2">','<div class="panel">','<div id="collapse2" class="collapse show"/>',"</div>","</div>"].join("");$(c).appendTo("#qunit-fixture");var e=$("#collapse1");var d=$("#collapse2");e.one("shown.bs.collapse",function(){b.ok(e.hasClass("show"));b.ok(d.hasClass("show"));a()}).bootstrapCollapse("show")});QUnit.test("should hide a collapsed element",function(a){a.expect(1);var b=$('<div class="collapse"/>').bootstrapCollapse("hide");a.ok(!b.hasClass("show"),'does not have class "show"')});QUnit.test("should not fire shown when show is prevented",function(b){b.expect(1);var a=b.async();$('<div class="collapse"/>').on("show.bs.collapse",function(c){c.preventDefault();b.ok(true,"show event fired");a()}).on("shown.bs.collapse",function(){b.ok(false,"shown event fired")}).bootstrapCollapse("show")});QUnit.test("should reset style to auto after finishing opening collapse",function(b){b.expect(2);var a=b.async();$('<div class="collapse" style="height: 0px"/>').on("show.bs.collapse",function(){b.strictEqual(this.style.height,"0px","height is 0px")}).on("shown.bs.collapse",function(){b.strictEqual(this.style.height,"","height is auto");a()}).bootstrapCollapse("show")});QUnit.test("should reset style to auto after finishing closing collapse",function(b){b.expect(1);var a=b.async();$('<div class="collapse"/>').on("shown.bs.collapse",function(){$(this).bootstrapCollapse("hide")}).on("hidden.bs.collapse",function(){b.strictEqual(this.style.height,"","height is auto");a()}).bootstrapCollapse("show")});QUnit.test('should remove "collapsed" class from target when collapse is shown',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",function(){c.ok(!a.hasClass("collapsed"),"target does not have collapsed class");b()});a.trigger("click")});QUnit.test('should add "collapsed" class to target when collapse is hidden',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",function(){c.ok(a.hasClass("collapsed"),"target has collapsed class");b()});a.trigger("click")});QUnit.test('should remove "collapsed" class from all triggers targeting the collapse when the collapse is shown',function(c){c.expect(2);var b=c.async();var a=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture");var d=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",function(){c.ok(!a.hasClass("collapsed"),"target trigger does not have collapsed class");c.ok(!d.hasClass("collapsed"),"alt trigger does not have collapsed class");b()});a.trigger("click")});QUnit.test('should add "collapsed" class to all triggers targeting the collapse when the collapse is hidden',function(c){c.expect(2);var b=c.async();var a=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");var d=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",function(){c.ok(a.hasClass("collapsed"),"target has collapsed class");c.ok(d.hasClass("collapsed"),"alt trigger has collapsed class");b()});a.trigger("click")});QUnit.test('should not close a collapse when initialized with "show" option if already shown',function(b){b.expect(0);var a=b.async();var c=$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hide.bs.collapse",function(){b.ok(false)});c.bootstrapCollapse("show");setTimeout(a,0)});QUnit.test('should open a collapse when initialized with "show" option if not already shown',function(b){b.expect(1);var a=b.async();var c=$('<div id="test1" />').appendTo("#qunit-fixture").on("show.bs.collapse",function(){b.ok(true)});c.bootstrapCollapse("show");setTimeout(a,0)});QUnit.test('should not show a collapse when initialized with "hide" option if already hidden',function(b){b.expect(0);var a=b.async();$('<div class="collapse"></div>').appendTo("#qunit-fixture").on("show.bs.collapse",function(){b.ok(false,'showing a previously-uninitialized hidden collapse when the "hide" method is called')}).bootstrapCollapse("hide");setTimeout(a,0)});QUnit.test('should hide a collapse when initialized with "hide" option if not already hidden',function(b){b.expect(1);var a=b.async();$('<div class="collapse show"></div>').appendTo("#qunit-fixture").on("hide.bs.collapse",function(){b.ok(true,'hiding a previously-uninitialized shown collapse when the "hide" method is called')}).bootstrapCollapse("hide");setTimeout(a,0)});QUnit.test('should remove "collapsed" class from active accordion target',function(b){b.expect(3);var a=b.async();var g='<div id="accordion"><div class="card"/><div class="card"/><div class="card"/></div>';var c=$(g).appendTo("#qunit-fixture").find(".card");var f=$('<a role="button" data-toggle="collapse" href="#body1" />').appendTo(c.eq(0));$('<div id="body1" class="show" data-parent="#accordion"/>').appendTo(c.eq(0));var e=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body2" />').appendTo(c.eq(1));$('<div id="body2" data-parent="#accordion"/>').appendTo(c.eq(1));var d=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body3" />').appendTo(c.eq(2));$('<div id="body3" data-parent="#accordion"/>').appendTo(c.eq(2)).on("shown.bs.collapse",function(){b.ok(f.hasClass("collapsed"),'inactive target 1 does have class "collapsed"');b.ok(e.hasClass("collapsed"),'inactive target 2 does have class "collapsed"');b.ok(!d.hasClass("collapsed"),'active target 3 does not have class "collapsed"');a()});d.trigger("click")});QUnit.test("should allow dots in data-parent",function(b){b.expect(3);var a=b.async();var g='<div class="accordion"><div class="card"/><div class="card"/><div class="card"/></div>';var c=$(g).appendTo("#qunit-fixture").find(".card");var f=$('<a role="button" data-toggle="collapse" href="#body1"/>').appendTo(c.eq(0));$('<div id="body1" class="show" data-parent=".accordion"/>').appendTo(c.eq(0));var e=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body2"/>').appendTo(c.eq(1));$('<div id="body2" data-parent=".accordion"/>').appendTo(c.eq(1));var d=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body3"/>').appendTo(c.eq(2));$('<div id="body3" data-parent=".accordion"/>').appendTo(c.eq(2)).on("shown.bs.collapse",function(){b.ok(f.hasClass("collapsed"),'inactive target 1 does have class "collapsed"');b.ok(e.hasClass("collapsed"),'inactive target 2 does have class "collapsed"');b.ok(!d.hasClass("collapsed"),'active target 3 does not have class "collapsed"');a()});d.trigger("click")});QUnit.test('should set aria-expanded="true" on trigger/control when collapse is shown',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1" aria-expanded="false"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",function(){c.strictEqual(a.attr("aria-expanded"),"true",'aria-expanded on target is "true"');b()});a.trigger("click")});QUnit.test('should set aria-expanded="false" on trigger/control when collapse is hidden',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" href="#test1" aria-expanded="true"/>').appendTo("#qunit-fixture");$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",function(){c.strictEqual(a.attr("aria-expanded"),"false",'aria-expanded on target is "false"');b()});a.trigger("click")});QUnit.test('should set aria-expanded="true" on all triggers targeting the collapse when the collapse is shown',function(c){c.expect(2);var b=c.async();var a=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1" aria-expanded="false"/>').appendTo("#qunit-fixture");var d=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1" aria-expanded="false"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",function(){c.strictEqual(a.attr("aria-expanded"),"true",'aria-expanded on trigger/control is "true"');c.strictEqual(d.attr("aria-expanded"),"true",'aria-expanded on alternative trigger/control is "true"');b()});a.trigger("click")});QUnit.test('should set aria-expanded="false" on all triggers targeting the collapse when the collapse is hidden',function(c){c.expect(2);var b=c.async();var a=$('<a role="button" data-toggle="collapse" href="#test1" aria-expanded="true"/>').appendTo("#qunit-fixture");var d=$('<a role="button" data-toggle="collapse" href="#test1" aria-expanded="true"/>').appendTo("#qunit-fixture");$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",function(){c.strictEqual(a.attr("aria-expanded"),"false",'aria-expanded on trigger/control is "false"');c.strictEqual(d.attr("aria-expanded"),"false",'aria-expanded on alternative trigger/control is "false"');b()});a.trigger("click")});QUnit.test('should change aria-expanded from active accordion trigger/control to "false" and set the trigger/control for the newly active one to "true"',function(b){b.expect(3);var a=b.async();var g='<div id="accordion"><div class="card"/><div class="card"/><div class="card"/></div>';var c=$(g).appendTo("#qunit-fixture").find(".card");var f=$('<a role="button" data-toggle="collapse" aria-expanded="true" href="#body1"/>').appendTo(c.eq(0));$('<div id="body1" class="show" data-parent="#accordion"/>').appendTo(c.eq(0));var e=$('<a role="button" data-toggle="collapse" aria-expanded="false" href="#body2" class="collapsed" aria-expanded="false" />').appendTo(c.eq(1));$('<div id="body2" data-parent="#accordion"/>').appendTo(c.eq(1));var d=$('<a class="collapsed" data-toggle="collapse" aria-expanded="false" role="button" href="#body3"/>').appendTo(c.eq(2));$('<div id="body3" data-parent="#accordion"/>').appendTo(c.eq(2)).on("shown.bs.collapse",function(){b.strictEqual(f.attr("aria-expanded"),"false",'inactive trigger/control 1 has aria-expanded="false"');b.strictEqual(e.attr("aria-expanded"),"false",'inactive trigger/control 2 has aria-expanded="false"');b.strictEqual(d.attr("aria-expanded"),"true",'active trigger/control 3 has aria-expanded="true"');a()});d.trigger("click")});QUnit.test("should not fire show event if show is prevented because other element is still transitioning",function(b){b.expect(1);var a=b.async();var h='<div id="accordion"><div class="card"/><div class="card"/></div>';var d=false;var c=$(h).appendTo("#qunit-fixture").find(".card");var f=$('<a role="button" data-toggle="collapse" href="#body1"/>').appendTo(c.eq(0));$('<div id="body1" class="collapse" data-parent="#accordion"/>').appendTo(c.eq(0)).on("show.bs.collapse",function(){d=true});var e=$('<a role="button" data-toggle="collapse" href="#body2"/>').appendTo(c.eq(1));var g=$('<div id="body2" class="collapse" data-parent="#accordion"/>').appendTo(c.eq(1));e.trigger("click");g.toggleClass("show collapsing").data("bs.collapse")._isTransitioning=1;f.trigger("click");setTimeout(function(){b.ok(!d,"show event did not fire");a()},1)});QUnit.test('should add "collapsed" class to target when collapse is hidden via manual invocation',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",function(){c.ok(a.hasClass("collapsed"));b()}).bootstrapCollapse("hide")});QUnit.test('should remove "collapsed" class from target when collapse is shown via manual invocation',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",function(){c.ok(!a.hasClass("collapsed"));b()}).bootstrapCollapse("show")});QUnit.test("should allow accordion to use children other than card",function(d){d.expect(4);var c=d.async();var g='<div id="accordion"><div class="item"><a id="linkTrigger" data-parent="#accordion" data-toggle="collapse" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne"></a><div id="collapseOne" class="collapse" role="tabpanel" aria-labelledby="headingThree"></div></div><div class="item"><a id="linkTriggerTwo" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo"></a><div id="collapseTwo" class="collapse show" role="tabpanel" aria-labelledby="headingTwo"></div></div></div>';$(g).appendTo("#qunit-fixture");var b=$("#linkTrigger");var a=$("#linkTriggerTwo");var f=$("#collapseOne");var e=$("#collapseTwo");f.on("shown.bs.collapse",function(){d.ok(f.hasClass("show"),"#collapseOne is shown");d.ok(!e.hasClass("show"),"#collapseTwo is not shown");e.on("shown.bs.collapse",function(){d.ok(!f.hasClass("show"),"#collapseOne is not shown");d.ok(e.hasClass("show"),"#collapseTwo is shown");c()});a.trigger($.Event("click"))});b.trigger($.Event("click"))});QUnit.test("should collapse accordion children but not nested accordion children",function(d){d.expect(9);var c=d.async();$('<div id="accordion"><div class="item"><a id="linkTrigger" data-parent="#accordion" data-toggle="collapse" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne"></a><div id="collapseOne" class="collapse" role="tabpanel" aria-labelledby="headingThree"><div id="nestedAccordion"><div class="item"><a id="nestedLinkTrigger" data-parent="#nestedAccordion" data-toggle="collapse" href="#nestedCollapseOne" aria-expanded="false" aria-controls="nestedCollapseOne"></a><div id="nestedCollapseOne" class="collapse" role="tabpanel" aria-labelledby="headingThree"></div></div></div></div></div><div class="item"><a id="linkTriggerTwo" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo"></a><div id="collapseTwo" class="collapse show" role="tabpanel" aria-labelledby="headingTwo"></div></div></div>').appendTo("#qunit-fixture");var b=$("#linkTrigger");var a=$("#linkTriggerTwo");var g=$("#nestedLinkTrigger");var f=$("#collapseOne");var e=$("#collapseTwo");var h=$("#nestedCollapseOne");f.one("shown.bs.collapse",function(){d.ok(f.hasClass("show"),"#collapseOne is shown");d.ok(!e.hasClass("show"),"#collapseTwo is not shown");d.ok(!$("#nestedCollapseOne").hasClass("show"),"#nestedCollapseOne is not shown");h.one("shown.bs.collapse",function(){d.ok(f.hasClass("show"),"#collapseOne is shown");d.ok(!e.hasClass("show"),"#collapseTwo is not shown");d.ok(h.hasClass("show"),"#nestedCollapseOne is shown");e.one("shown.bs.collapse",function(){d.ok(!f.hasClass("show"),"#collapseOne is not shown");d.ok(e.hasClass("show"),"#collapseTwo is shown");d.ok(h.hasClass("show"),"#nestedCollapseOne is shown");c()});a.trigger($.Event("click"))});g.trigger($.Event("click"))});b.trigger($.Event("click"))});QUnit.test("should not prevent event for input",function(c){c.expect(3);var b=c.async();var a=$('<input type="checkbox" data-toggle="collapse" data-target="#collapsediv1" />').appendTo("#qunit-fixture");$('<div id="collapsediv1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",function(){c.ok($(this).hasClass("show"));c.ok(a.attr("aria-expanded")==="true");c.ok(a.prop("checked"));b()});a.trigger($.Event("click"))});QUnit.test('should add "collapsed" class to triggers only when all the targeted collapse are hidden',function(c){c.expect(9);var b=c.async();var e=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");var d=$('<a role="button" data-toggle="collapse" href="#test2"/>').appendTo("#qunit-fixture");var a=$('<a role="button" data-toggle="collapse" href=".multi"/>').appendTo("#qunit-fixture");var g=$('<div id="test1" class="multi"/>').appendTo("#qunit-fixture");var f=$('<div id="test2" class="multi"/>').appendTo("#qunit-fixture");f.one("shown.bs.collapse",function(){c.ok(!e.hasClass("collapsed"),"trigger1 does not have collapsed class");c.ok(!d.hasClass("collapsed"),"trigger2 does not have collapsed class");c.ok(!a.hasClass("collapsed"),"trigger3 does not have collapsed class");f.one("hidden.bs.collapse",function(){c.ok(!e.hasClass("collapsed"),"trigger1 does not have collapsed class");c.ok(d.hasClass("collapsed"),"trigger2 has collapsed class");c.ok(!a.hasClass("collapsed"),"trigger3 does not have collapsed class");g.one("hidden.bs.collapse",function(){c.ok(e.hasClass("collapsed"),"trigger1 has collapsed class");c.ok(d.hasClass("collapsed"),"trigger2 has collapsed class");c.ok(a.hasClass("collapsed"),"trigger3 has collapsed class");b()});e.trigger("click")});d.trigger("click")});a.trigger("click")});QUnit.test('should set aria-expanded="true" to triggers targetting shown collaspe and aria-expanded="false" only when all the targeted collapses are shown',function(c){c.expect(9);var b=c.async();var e=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");var d=$('<a role="button" data-toggle="collapse" href="#test2"/>').appendTo("#qunit-fixture");var a=$('<a role="button" data-toggle="collapse" href=".multi"/>').appendTo("#qunit-fixture");var g=$('<div id="test1" class="multi collapse"/>').appendTo("#qunit-fixture");var f=$('<div id="test2" class="multi collapse"/>').appendTo("#qunit-fixture");f.one("shown.bs.collapse",function(){c.strictEqual(e.attr("aria-expanded"),"true",'aria-expanded on trigger1 is "true"');c.strictEqual(d.attr("aria-expanded"),"true",'aria-expanded on trigger2 is "true"');c.strictEqual(a.attr("aria-expanded"),"true",'aria-expanded on trigger3 is "true"');f.one("hidden.bs.collapse",function(){c.strictEqual(e.attr("aria-expanded"),"true",'aria-expanded on trigger1 is "true"');c.strictEqual(d.attr("aria-expanded"),"false",'aria-expanded on trigger2 is "false"');c.strictEqual(a.attr("aria-expanded"),"true",'aria-expanded on trigger3 is "true"');g.one("hidden.bs.collapse",function(){c.strictEqual(e.attr("aria-expanded"),"false",'aria-expanded on trigger1 is "fasle"');c.strictEqual(d.attr("aria-expanded"),"false",'aria-expanded on trigger2 is "false"');c.strictEqual(a.attr("aria-expanded"),"false",'aria-expanded on trigger3 is "false"');b()});e.trigger("click")});d.trigger("click")});a.trigger("click")})});